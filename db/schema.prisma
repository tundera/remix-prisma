datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb", "dataProxy"]
}

model Log {
  id        String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  level     Level
  message   String
  meta      Json
}

enum Level {
  Info
  Warn
  Error
}

model Coach {
  id          String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  handle      String   @unique
  type        String
  isAssistant String
  team        Team?    @relation(fields: [teamId], references: [id])
  teamId      String?  @db.ObjectId
}

model Player {
  id        String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  handle    String   @unique
  slug      String   @unique
  height    String
  weight    String
  number    String?
  position  String?
  team      Team?    @relation(fields: [teamId], references: [id])
  teamId    String?  @db.ObjectId
}

model ColorScheme {
  id        String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  primary   String
  secondary String
  team      Team?    @relation(fields: [teamId], references: [id])
  teamId    String?  @unique @db.ObjectId

  @@unique([primary, secondary], name: "ColorScheme_primary_secondary_key")
}

model Team {
  id            String       @id @default(dbgenerated()) @map("_id") @db.ObjectId
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  name          String       @unique
  handle        String       @unique
  slug          String       @unique
  city          String
  abbreviation  String       @unique
  conference    String
  division      String
  established   String
  wins          Int?
  losses        Int?
  winPercentage Float?
  players       Player[]
  coaches       Coach[]
  colorScheme   ColorScheme?
}
